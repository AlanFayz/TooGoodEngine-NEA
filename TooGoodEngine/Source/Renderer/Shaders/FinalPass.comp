#version 460 core 

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(rgba32f, binding = 0) uniform image2D u_FinalImage;

/*
   Tone mapping algorithm maps values from hdr to ldr
*/
uniform float u_Gradient;

float Map(float x)
{
   float t = u_Gradient * log(x + 0.97) / log(x+5);
   return t; 
}   

vec3 ToneMap(in vec3 color)
{
    return vec3(Map(color.r), Map(color.g), Map(color.b));
}

void main()
{
	ivec2 coordinate = ivec2(gl_GlobalInvocationID);

    vec4 currentColor = imageLoad(u_FinalImage, coordinate);

    currentColor.rgb = ToneMap(currentColor.rgb);

    //converts color from linear to non linear 
    currentColor = pow(currentColor, vec4(1.0/2.2));  

    imageStore(u_FinalImage, coordinate, currentColor);
}
